ANSIBLE ad-hoc commands

# to test your connection to the 'test' group of servers
ansible control -i hosts -u folarin -k -m command -a date

#install a module as root on a node
ansible control -k --become  -K -i hosts -m command -a 'sudo apt install python-simplejson'

ansible test --become -k -K -i hosts -m apt -a "name=python-simplejson state=present"

#run command as root on test group, using ssh user osboxes
ansible test --become -u osboxes -K -i hosts -m command -a 'sudo apt install python-simplejson'

#install package as root on test group using ssh user osboxes with apt module
ansible test --become -kK -u osboxes -i hosts -m apt -a "name=python-simplejson state=present"

#start a service
ansible test --become -kK -u osboxes -i hosts -m service -a "name=mysql state=started"

#restart a service
ansible test --become -kK -u osboxes -i hosts -m service -a "name=mysql state=started"



ANSIBLE PLAYBOOK

#run a playbook
ansible-playbook -K orchestration.yml 


ROLES
	ansible-galaxy init roles/apache2
	
TAGS
	ansible-playbook -i hosts -K playbook.yml --list-tags
	ansible-playbook -i hosts -K playbook.yml --tags web
	ansible-playbook -i hosts -K -u osboxes playbook.yml --tags always,web,configuration
	
VARIABLES
	ansible -i hosts -Kk -u osboxes test -m setup > info.json
	{{ ansible_facts['nodename'] }} in *.j2 files
	{{ hostvars['localhost']['ansible_facts']['nodename'] }}
	
	{% for host in groups['test'] %}
		server {{ hostvars[host]['ansible_facts']['nodename'] }}:8000
		#server localhost:8080
	{% endfor %}